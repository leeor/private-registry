// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Js_json = require("bs-platform/lib/js/js_json.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");

function fromConstValue(param) {
  if (typeof param === "number") {
    return null;
  } else {
    var variant = param[0];
    if (variant >= 3850876) {
      if (variant >= 770676513) {
        if (variant >= 848054398) {
          return Belt_List.toArray(Belt_List.map(param[1], fromConstValue));
        } else {
          return param[1];
        }
      } else if (variant >= 365180284) {
        return param[1];
      } else {
        return Belt_List.reduceReverse(param[1], { }, (function (dict, param) {
                      dict[param[0]] = fromConstValue(param[1]);
                      return dict;
                    }));
      }
    } else {
      return param[1];
    }
  }
}

function toConstValue(json) {
  var match = Js_json.classify(json);
  if (typeof match === "number") {
    switch (match) {
      case /* JSONFalse */0 :
          return /* `Boolean */[
                  -883944824,
                  false
                ];
      case /* JSONTrue */1 :
          return /* `Boolean */[
                  -883944824,
                  true
                ];
      case /* JSONNull */2 :
          return /* Null */870828711;
      
    }
  } else {
    switch (match.tag | 0) {
      case /* JSONString */0 :
          return /* `String */[
                  -976970511,
                  match[0]
                ];
      case /* JSONNumber */1 :
          var num = match[0];
          if (Math.floor(num) === num) {
            return /* `Int */[
                    3654863,
                    num | 0
                  ];
          } else {
            return /* `Float */[
                    365180284,
                    num
                  ];
          }
      case /* JSONObject */2 :
          return /* `Map */[
                  3850876,
                  Belt_List.fromArray(Belt_Array.map(Js_dict.entries(match[0]), (function (param) {
                              return /* tuple */[
                                      param[0],
                                      toConstValue(param[1])
                                    ];
                            })))
                ];
      case /* JSONArray */3 :
          return /* `List */[
                  848054398,
                  Belt_List.fromArray(Belt_Array.map(match[0], toConstValue))
                ];
      
    }
  }
}

function toVariables(json) {
  var match = Js_json.classify(json);
  if (typeof match === "number" || match.tag !== /* JSONObject */2) {
    return /* Error */Block.__(1, ["Variables must be a JSON object"]);
  } else {
    return /* Ok */Block.__(0, [Belt_List.fromArray(Belt_Array.map(Js_dict.entries(match[0]), (function (param) {
                          return /* tuple */[
                                  param[0],
                                  toConstValue(param[1])
                                ];
                        })))]);
  }
}

exports.fromConstValue = fromConstValue;
exports.toConstValue = toConstValue;
exports.toVariables = toVariables;
/* No side effect */
